import {
  apply,
  compose,
  create,
  init_transform
} from "./chunk-L4ZK74UW.js";
import {
  cssOpacity,
  init_css
} from "./chunk-IGYSOPQG.js";
import {
  ImageState_default,
  init_ImageState
} from "./chunk-Z2ZB4XGC.js";
import {
  Base_default,
  Property_default,
  init_Base,
  init_Property
} from "./chunk-L34RGYAE.js";
import {
  createCanvasContext2D,
  init_dom
} from "./chunk-KFVHZ4ZX.js";
import {
  State_default,
  init_State
} from "./chunk-ZK24VY2W.js";
import {
  Event_default,
  Observable_default,
  assign,
  containsCoordinate,
  getBottomLeft,
  getBottomRight,
  getTopLeft,
  getTopRight,
  init_Event,
  init_Observable,
  init_events,
  init_extent,
  init_obj,
  listen,
  unlistenByKey
} from "./chunk-J5U7SJYM.js";
import {
  EventType_default,
  __esm,
  abstract,
  assert,
  init_EventType,
  init_asserts,
  init_util
} from "./chunk-P3NQKPC7.js";

// node_modules/ol/render/EventType.js
var EventType_default2;
var init_EventType2 = __esm({
  "node_modules/ol/render/EventType.js"() {
    EventType_default2 = {
      PRERENDER: "prerender",
      POSTRENDER: "postrender",
      PRECOMPOSE: "precompose",
      POSTCOMPOSE: "postcompose",
      RENDERCOMPLETE: "rendercomplete"
    };
  }
});

// node_modules/ol/layer/Layer.js
function inView(layerState, viewState) {
  if (!layerState.visible) {
    return false;
  }
  var resolution = viewState.resolution;
  if (resolution < layerState.minResolution || resolution >= layerState.maxResolution) {
    return false;
  }
  var zoom = viewState.zoom;
  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;
}
var __extends, Layer, Layer_default;
var init_Layer = __esm({
  "node_modules/ol/layer/Layer.js"() {
    init_Base();
    init_EventType();
    init_Property();
    init_EventType2();
    init_State();
    init_asserts();
    init_obj();
    init_events();
    __extends = function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
          d2.__proto__ = b2;
        } || function(d2, b2) {
          for (var p in b2)
            if (Object.prototype.hasOwnProperty.call(b2, p))
              d2[p] = b2[p];
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    Layer = function(_super) {
      __extends(Layer2, _super);
      function Layer2(options) {
        var _this = this;
        var baseOptions = assign({}, options);
        delete baseOptions.source;
        _this = _super.call(this, baseOptions) || this;
        _this.on;
        _this.once;
        _this.un;
        _this.mapPrecomposeKey_ = null;
        _this.mapRenderKey_ = null;
        _this.sourceChangeKey_ = null;
        _this.renderer_ = null;
        if (options.render) {
          _this.render = options.render;
        }
        if (options.map) {
          _this.setMap(options.map);
        }
        _this.addChangeListener(Property_default.SOURCE, _this.handleSourcePropertyChange_);
        var source = options.source ? options.source : null;
        _this.setSource(source);
        return _this;
      }
      Layer2.prototype.getLayersArray = function(opt_array) {
        var array = opt_array ? opt_array : [];
        array.push(this);
        return array;
      };
      Layer2.prototype.getLayerStatesArray = function(opt_states) {
        var states = opt_states ? opt_states : [];
        states.push(this.getLayerState());
        return states;
      };
      Layer2.prototype.getSource = function() {
        return this.get(Property_default.SOURCE) || null;
      };
      Layer2.prototype.getSourceState = function() {
        var source = this.getSource();
        return !source ? State_default.UNDEFINED : source.getState();
      };
      Layer2.prototype.handleSourceChange_ = function() {
        this.changed();
      };
      Layer2.prototype.handleSourcePropertyChange_ = function() {
        if (this.sourceChangeKey_) {
          unlistenByKey(this.sourceChangeKey_);
          this.sourceChangeKey_ = null;
        }
        var source = this.getSource();
        if (source) {
          this.sourceChangeKey_ = listen(source, EventType_default.CHANGE, this.handleSourceChange_, this);
        }
        this.changed();
      };
      Layer2.prototype.getFeatures = function(pixel) {
        if (!this.renderer_) {
          return new Promise(function(resolve) {
            return resolve([]);
          });
        }
        return this.renderer_.getFeatures(pixel);
      };
      Layer2.prototype.render = function(frameState, target) {
        var layerRenderer = this.getRenderer();
        if (layerRenderer.prepareFrame(frameState)) {
          return layerRenderer.renderFrame(frameState, target);
        }
      };
      Layer2.prototype.setMap = function(map) {
        if (this.mapPrecomposeKey_) {
          unlistenByKey(this.mapPrecomposeKey_);
          this.mapPrecomposeKey_ = null;
        }
        if (!map) {
          this.changed();
        }
        if (this.mapRenderKey_) {
          unlistenByKey(this.mapRenderKey_);
          this.mapRenderKey_ = null;
        }
        if (map) {
          this.mapPrecomposeKey_ = listen(map, EventType_default2.PRECOMPOSE, function(evt) {
            var renderEvent = evt;
            var layerStatesArray = renderEvent.frameState.layerStatesArray;
            var layerState = this.getLayerState(false);
            assert(!layerStatesArray.some(function(arrayLayerState) {
              return arrayLayerState.layer === layerState.layer;
            }), 67);
            layerStatesArray.push(layerState);
          }, this);
          this.mapRenderKey_ = listen(this, EventType_default.CHANGE, map.render, map);
          this.changed();
        }
      };
      Layer2.prototype.setSource = function(source) {
        this.set(Property_default.SOURCE, source);
      };
      Layer2.prototype.getRenderer = function() {
        if (!this.renderer_) {
          this.renderer_ = this.createRenderer();
        }
        return this.renderer_;
      };
      Layer2.prototype.hasRenderer = function() {
        return !!this.renderer_;
      };
      Layer2.prototype.createRenderer = function() {
        return null;
      };
      Layer2.prototype.disposeInternal = function() {
        if (this.renderer_) {
          this.renderer_.dispose();
          delete this.renderer_;
        }
        this.setSource(null);
        _super.prototype.disposeInternal.call(this);
      };
      return Layer2;
    }(Base_default);
    Layer_default = Layer;
  }
});

// node_modules/ol/render/Event.js
var __extends2, RenderEvent, Event_default2;
var init_Event2 = __esm({
  "node_modules/ol/render/Event.js"() {
    init_Event();
    __extends2 = function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
          d2.__proto__ = b2;
        } || function(d2, b2) {
          for (var p in b2)
            if (Object.prototype.hasOwnProperty.call(b2, p))
              d2[p] = b2[p];
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    RenderEvent = function(_super) {
      __extends2(RenderEvent2, _super);
      function RenderEvent2(type, opt_inversePixelTransform, opt_frameState, opt_context) {
        var _this = _super.call(this, type) || this;
        _this.inversePixelTransform = opt_inversePixelTransform;
        _this.frameState = opt_frameState;
        _this.context = opt_context;
        return _this;
      }
      return RenderEvent2;
    }(Event_default);
    Event_default2 = RenderEvent;
  }
});

// node_modules/ol/renderer/Layer.js
var __extends3, LayerRenderer, Layer_default2;
var init_Layer2 = __esm({
  "node_modules/ol/renderer/Layer.js"() {
    init_EventType();
    init_ImageState();
    init_Observable();
    init_State();
    init_util();
    __extends3 = function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
          d2.__proto__ = b2;
        } || function(d2, b2) {
          for (var p in b2)
            if (Object.prototype.hasOwnProperty.call(b2, p))
              d2[p] = b2[p];
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    LayerRenderer = function(_super) {
      __extends3(LayerRenderer2, _super);
      function LayerRenderer2(layer) {
        var _this = _super.call(this) || this;
        _this.boundHandleImageChange_ = _this.handleImageChange_.bind(_this);
        _this.layer_ = layer;
        _this.declutterExecutorGroup = null;
        return _this;
      }
      LayerRenderer2.prototype.getFeatures = function(pixel) {
        return abstract();
      };
      LayerRenderer2.prototype.prepareFrame = function(frameState) {
        return abstract();
      };
      LayerRenderer2.prototype.renderFrame = function(frameState, target) {
        return abstract();
      };
      LayerRenderer2.prototype.loadedTileCallback = function(tiles, zoom, tile) {
        if (!tiles[zoom]) {
          tiles[zoom] = {};
        }
        tiles[zoom][tile.tileCoord.toString()] = tile;
        return void 0;
      };
      LayerRenderer2.prototype.createLoadedTileFinder = function(source, projection, tiles) {
        return function(zoom, tileRange) {
          var callback = this.loadedTileCallback.bind(this, tiles, zoom);
          return source.forEachLoadedTile(projection, zoom, tileRange, callback);
        }.bind(this);
      };
      LayerRenderer2.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, matches) {
        return void 0;
      };
      LayerRenderer2.prototype.getDataAtPixel = function(pixel, frameState, hitTolerance) {
        return null;
      };
      LayerRenderer2.prototype.getLayer = function() {
        return this.layer_;
      };
      LayerRenderer2.prototype.handleFontsChanged = function() {
      };
      LayerRenderer2.prototype.handleImageChange_ = function(event) {
        var image = event.target;
        if (image.getState() === ImageState_default.LOADED) {
          this.renderIfReadyAndVisible();
        }
      };
      LayerRenderer2.prototype.loadImage = function(image) {
        var imageState = image.getState();
        if (imageState != ImageState_default.LOADED && imageState != ImageState_default.ERROR) {
          image.addEventListener(EventType_default.CHANGE, this.boundHandleImageChange_);
        }
        if (imageState == ImageState_default.IDLE) {
          image.load();
          imageState = image.getState();
        }
        return imageState == ImageState_default.LOADED;
      };
      LayerRenderer2.prototype.renderIfReadyAndVisible = function() {
        var layer = this.getLayer();
        if (layer.getVisible() && layer.getSourceState() == State_default.READY) {
          layer.changed();
        }
      };
      return LayerRenderer2;
    }(Observable_default);
    Layer_default2 = LayerRenderer;
  }
});

// node_modules/ol/renderer/canvas/Layer.js
var __extends4, CanvasLayerRenderer, Layer_default3;
var init_Layer3 = __esm({
  "node_modules/ol/renderer/canvas/Layer.js"() {
    init_Layer2();
    init_Event2();
    init_EventType2();
    init_transform();
    init_extent();
    init_dom();
    init_css();
    __extends4 = function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
          d2.__proto__ = b2;
        } || function(d2, b2) {
          for (var p in b2)
            if (Object.prototype.hasOwnProperty.call(b2, p))
              d2[p] = b2[p];
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    CanvasLayerRenderer = function(_super) {
      __extends4(CanvasLayerRenderer2, _super);
      function CanvasLayerRenderer2(layer) {
        var _this = _super.call(this, layer) || this;
        _this.container = null;
        _this.renderedResolution;
        _this.tempTransform = create();
        _this.pixelTransform = create();
        _this.inversePixelTransform = create();
        _this.context = null;
        _this.containerReused = false;
        return _this;
      }
      CanvasLayerRenderer2.prototype.useContainer = function(target, transform, opacity) {
        var layerClassName = this.getLayer().getClassName();
        var container, context;
        if (target && target.style.opacity === cssOpacity(opacity) && target.className === layerClassName) {
          var canvas = target.firstElementChild;
          if (canvas instanceof HTMLCanvasElement) {
            context = canvas.getContext("2d");
          }
        }
        if (context && context.canvas.style.transform === transform) {
          this.container = target;
          this.context = context;
          this.containerReused = true;
        } else if (this.containerReused) {
          this.container = null;
          this.context = null;
          this.containerReused = false;
        }
        if (!this.container) {
          container = document.createElement("div");
          container.className = layerClassName;
          var style = container.style;
          style.position = "absolute";
          style.width = "100%";
          style.height = "100%";
          context = createCanvasContext2D();
          var canvas = context.canvas;
          container.appendChild(canvas);
          style = canvas.style;
          style.position = "absolute";
          style.left = "0";
          style.transformOrigin = "top left";
          this.container = container;
          this.context = context;
        }
      };
      CanvasLayerRenderer2.prototype.clipUnrotated = function(context, frameState, extent) {
        var topLeft = getTopLeft(extent);
        var topRight = getTopRight(extent);
        var bottomRight = getBottomRight(extent);
        var bottomLeft = getBottomLeft(extent);
        apply(frameState.coordinateToPixelTransform, topLeft);
        apply(frameState.coordinateToPixelTransform, topRight);
        apply(frameState.coordinateToPixelTransform, bottomRight);
        apply(frameState.coordinateToPixelTransform, bottomLeft);
        var inverted = this.inversePixelTransform;
        apply(inverted, topLeft);
        apply(inverted, topRight);
        apply(inverted, bottomRight);
        apply(inverted, bottomLeft);
        context.save();
        context.beginPath();
        context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));
        context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));
        context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));
        context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));
        context.clip();
      };
      CanvasLayerRenderer2.prototype.dispatchRenderEvent_ = function(type, context, frameState) {
        var layer = this.getLayer();
        if (layer.hasListener(type)) {
          var event_1 = new Event_default2(type, this.inversePixelTransform, frameState, context);
          layer.dispatchEvent(event_1);
        }
      };
      CanvasLayerRenderer2.prototype.preRender = function(context, frameState) {
        this.dispatchRenderEvent_(EventType_default2.PRERENDER, context, frameState);
      };
      CanvasLayerRenderer2.prototype.postRender = function(context, frameState) {
        this.dispatchRenderEvent_(EventType_default2.POSTRENDER, context, frameState);
      };
      CanvasLayerRenderer2.prototype.getRenderTransform = function(center, resolution, rotation, pixelRatio, width, height, offsetX) {
        var dx1 = width / 2;
        var dy1 = height / 2;
        var sx = pixelRatio / resolution;
        var sy = -sx;
        var dx2 = -center[0] + offsetX;
        var dy2 = -center[1];
        return compose(this.tempTransform, dx1, dy1, sx, sy, -rotation, dx2, dy2);
      };
      CanvasLayerRenderer2.prototype.getDataAtPixel = function(pixel, frameState, hitTolerance) {
        var renderPixel = apply(this.inversePixelTransform, pixel.slice());
        var context = this.context;
        var layer = this.getLayer();
        var layerExtent = layer.getExtent();
        if (layerExtent) {
          var renderCoordinate = apply(frameState.pixelToCoordinateTransform, pixel.slice());
          if (!containsCoordinate(layerExtent, renderCoordinate)) {
            return null;
          }
        }
        var data;
        try {
          var x = Math.round(renderPixel[0]);
          var y = Math.round(renderPixel[1]);
          var newCanvas = document.createElement("canvas");
          var newContext = newCanvas.getContext("2d");
          newCanvas.width = 1;
          newCanvas.height = 1;
          newContext.clearRect(0, 0, 1, 1);
          newContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);
          data = newContext.getImageData(0, 0, 1, 1).data;
        } catch (err) {
          if (err.name === "SecurityError") {
            return new Uint8Array();
          }
          return data;
        }
        if (data[3] === 0) {
          return null;
        }
        return data;
      };
      return CanvasLayerRenderer2;
    }(Layer_default2);
    Layer_default3 = CanvasLayerRenderer;
  }
});

export {
  EventType_default2 as EventType_default,
  init_EventType2 as init_EventType,
  inView,
  Layer_default,
  init_Layer,
  Event_default2 as Event_default,
  init_Event2 as init_Event,
  Layer_default3 as Layer_default2,
  init_Layer3 as init_Layer2
};
//# sourceMappingURL=chunk-E3KT5X32.js.map
