{
  "version": 3,
  "sources": ["../ol-geocoder/konstants/index.js", "../ol-geocoder/src/helpers/mix.js", "../ol-geocoder/src/helpers/dom.js", "../ol-geocoder/src/html.js", "../ol-geocoder/src/providers/photon.js", "../ol-geocoder/src/providers/osm.js", "../ol-geocoder/src/providers/mapquest.js", "../ol-geocoder/src/providers/bing.js", "../ol-geocoder/src/providers/opencage.js", "../ol-geocoder/src/helpers/ajax.js", "../ol-geocoder/src/nominatim.js", "../ol-geocoder/src/base.js", "dep:ol-geocoder"],
  "sourcesContent": ["import * as _VARS_ from './vars.json';\n\nexport const VARS = _VARS_;\n\nexport const EVENT_TYPE = {\n  ADDRESSCHOSEN: 'addresschosen',\n};\n\nexport const CONTROL_TYPE = {\n  NOMINATIM: 'nominatim',\n  REVERSE: 'reverse',\n};\n\nexport const TARGET_TYPE = {\n  GLASS: 'glass-button',\n  INPUT: 'text-input',\n};\n\nexport const FEATURE_SRC = '//cdn.rawgit.com/jonataswalker/map-utils/master/images/marker.png';\n\nexport const PROVIDERS = {\n  OSM: 'osm',\n  MAPQUEST: 'mapquest',\n  PHOTON: 'photon',\n  BING: 'bing',\n  OPENCAGE: 'opencage',\n};\n\nexport const DEFAULT_OPTIONS = {\n  provider: PROVIDERS.OSM,\n  placeholder: 'Search for an address',\n  featureStyle: null,\n  targetType: TARGET_TYPE.GLASS,\n  lang: 'en-US',\n  limit: 5,\n  keepOpen: false,\n  preventDefault: false,\n  autoComplete: false,\n  autoCompleteMinLength: 2,\n  autoCompleteTimeout: 200,\n  debug: false,\n};\n", "/**\n * Overwrites obj1's values with obj2's and adds\n * obj2's if non existent in obj1\n * @returns obj3 a new object based on obj1 and obj2\n */\nexport function mergeOptions(obj1, obj2) {\n  const obj3 = {};\n\n  for (const key in obj1) {\n    if (Object.prototype.hasOwnProperty.call(obj1, key)) {\n      obj3[key] = obj1[key];\n    }\n  }\n\n  for (const key in obj2) {\n    if (Object.prototype.hasOwnProperty.call(obj2, key)) {\n      obj3[key] = obj2[key];\n    }\n  }\n\n  return obj3;\n}\n\nexport function assert(condition, message = 'Assertion failed') {\n  if (!condition) {\n    if (typeof Error !== 'undefined') throw new Error(message);\n\n    throw message; // Fallback\n  }\n}\n\nexport function now() {\n  // Polyfill for window.performance.now()\n  // @license http://opensource.org/licenses/MIT\n  // copyright Paul Irish 2015\n  // https://gist.github.com/paulirish/5438650\n  if ('performance' in window === false) {\n    window.performance = {};\n  }\n\n  if ('now' in window.performance === false) {\n    let nowOffset = Date.now();\n\n    if (performance.timing && performance.timing.navigationStart) {\n      nowOffset = performance.timing.navigationStart;\n    }\n\n    window.performance.now = () => Date.now() - nowOffset;\n  }\n\n  return window.performance.now();\n}\n\nexport function flyTo(map, coord, duration = 500, resolution = 2.388657133911758) {\n  map.getView().animate({ duration, resolution }, { duration, center: coord });\n}\n\nexport function randomId(prefix) {\n  const id = now().toString(36);\n\n  return prefix ? prefix + id : id;\n}\n\nexport function isNumeric(str) {\n  return /^\\d+$/u.test(str);\n}\n\nexport function isEmpty(str) {\n  return !str || str.length === 0;\n}\n\nexport function emptyArray(array) {\n  while (array.length) array.pop();\n}\n\nexport function anyMatchInArray(source, target) {\n  return source.some((each) => target.includes(each));\n}\n\nexport function everyMatchInArray(arr1, arr2) {\n  return arr2.every((each) => arr1.includes(each));\n}\n\nexport function anyItemHasValue(obj, has = false) {\n  const keys = Object.keys(obj);\n\n  keys.forEach((key) => {\n    if (!isEmpty(obj[key])) has = true;\n  });\n\n  return has;\n}\n", "/* eslint-disable optimize-regex/optimize-regex */\n/* eslint-disable prefer-named-capture-group */\nimport { isNumeric } from './mix';\n\n/**\n * @param {Element|Array<Element>} element DOM node or array of nodes.\n * @param {String|Array<String>} classname Class or array of classes.\n * For example: 'class1 class2' or ['class1', 'class2']\n * @param {Number|undefined} timeout Timeout to remove a class.\n */\nexport function addClass(element, classname, timeout) {\n  if (Array.isArray(element)) {\n    element.forEach((each) => addClass(each, classname));\n\n    return;\n  }\n\n  const array = Array.isArray(classname) ? classname : classname.split(/\\s+/u);\n\n  let i = array.length;\n\n  while (i--) {\n    if (!hasClass(element, array[i])) {\n      _addClass(element, array[i], timeout);\n    }\n  }\n}\n\n/**\n * @param {Element|Array<Element>} element DOM node or array of nodes.\n * @param {String|Array<String>} classname Class or array of classes.\n * For example: 'class1 class2' or ['class1', 'class2']\n * @param {Number|undefined} timeout Timeout to add a class.\n */\nexport function removeClass(element, classname, timeout) {\n  if (Array.isArray(element)) {\n    element.forEach((each) => removeClass(each, classname, timeout));\n\n    return;\n  }\n\n  const array = Array.isArray(classname) ? classname : classname.split(/\\s+/u);\n\n  let i = array.length;\n\n  while (i--) {\n    if (hasClass(element, array[i])) {\n      _removeClass(element, array[i], timeout);\n    }\n  }\n}\n\n/**\n * @param {Element} element DOM node.\n * @param {String} classname Classname.\n * @return {Boolean}\n */\nexport function hasClass(element, c) {\n  // use native if available\n  return element.classList ? element.classList.contains(c) : classRegex(c).test(element.className);\n}\n\n/**\n * @param {Element|Array<Element>} element DOM node or array of nodes.\n * @param {String} classname Classe.\n */\nexport function toggleClass(element, classname) {\n  if (Array.isArray(element)) {\n    element.forEach((each) => toggleClass(each, classname));\n\n    return;\n  }\n\n  // use native if available\n  if (element.classList) {\n    element.classList.toggle(classname);\n  } else {\n    hasClass(element, classname) ? _removeClass(element, classname) : _addClass(element, classname);\n  }\n}\n\n/**\n * Abstraction to querySelectorAll for increased\n * performance and greater usability\n * @param {String} selector\n * @param {Element} context (optional)\n * @param {Boolean} findAll (optional)\n * @return (findAll) {Element} : {Array}\n */\nexport function $(id) {\n  id = id[0] === '#' ? id.slice(1, 1 + id.length) : id;\n\n  return document.getElementById(id);\n}\n\nexport function isElement(obj) {\n  // DOM, Level2\n  if ('HTMLElement' in window) {\n    return !!obj && obj instanceof HTMLElement;\n  }\n\n  // Older browsers\n  return !!obj && typeof obj === 'object' && obj.nodeType === 1 && !!obj.nodeName;\n}\n\nexport function getAllChildren(node, tag) {\n  return [].slice.call(node.getElementsByTagName(tag));\n}\n\nexport function removeAllChildren(node) {\n  while (node.firstChild) node.firstChild.remove();\n}\n\nexport function removeAll(collection) {\n  let node;\n\n  while ((node = collection[0])) node.remove();\n}\n\nexport function getChildren(node, tag) {\n  return [].filter.call(node.childNodes, (el) =>\n    tag ? el.nodeType === 1 && el.tagName.toLowerCase() === tag : el.nodeType === 1\n  );\n}\n\nexport function template(html, row) {\n  return html.replace(/\\{\\s*([\\w-]+)\\s*\\}/gu, (htm, key) => {\n    const value = row[key] === undefined ? '' : row[key];\n\n    return htmlEscape(value);\n  });\n}\n\nexport function htmlEscape(str) {\n  return String(str)\n    .replaceAll('&', '&amp;')\n    .replaceAll('<', '&lt;')\n    .replaceAll('>', '&gt;')\n    .replaceAll('\"', '&quot;')\n    .replaceAll(\"'\", '&#039;');\n}\n\nexport function createElement(node, html) {\n  let elem;\n\n  if (Array.isArray(node)) {\n    elem = document.createElement(node[0]);\n\n    if (node[1].id) elem.id = node[1].id;\n\n    if (node[1].classname) elem.className = node[1].classname;\n\n    if (node[1].attr) {\n      const { attr } = node[1];\n\n      if (Array.isArray(attr)) {\n        let i = -1;\n\n        while (++i < attr.length) {\n          elem.setAttribute(attr[i].name, attr[i].value);\n        }\n      } else {\n        elem.setAttribute(attr.name, attr.value);\n      }\n    }\n  } else {\n    elem = document.createElement(node);\n  }\n\n  elem.innerHTML = html;\n\n  const frag = document.createDocumentFragment();\n\n  while (elem.childNodes[0]) frag.append(elem.childNodes[0]);\n\n  elem.append(frag);\n\n  return elem;\n}\n\nfunction classRegex(classname) {\n  // eslint-disable-next-line security/detect-non-literal-regexp\n  return new RegExp(`(^|\\\\s+) ${classname} (\\\\s+|$)`, 'u');\n}\n\nfunction _addClass(el, klass, timeout) {\n  // use native if available\n  if (el.classList) {\n    el.classList.add(klass);\n  } else {\n    el.className = `${el.className} ${klass}`.trim();\n  }\n\n  if (timeout && isNumeric(timeout)) {\n    window.setTimeout(() => _removeClass(el, klass), timeout);\n  }\n}\n\nfunction _removeClass(el, klass, timeout) {\n  if (el.classList) {\n    el.classList.remove(klass);\n  } else {\n    el.className = el.className.replace(classRegex(klass), ' ').trim();\n  }\n\n  if (timeout && isNumeric(timeout)) {\n    window.setTimeout(() => _addClass(el, klass), timeout);\n  }\n}\n", "import { VARS, TARGET_TYPE } from '../konstants';\n\nimport { createElement } from './helpers/dom';\n\nconst klasses = VARS.cssClasses;\n\n/**\n * @class Html\n */\nexport class Html {\n  /**\n   * @constructor\n   * @param {Function} base Base class.\n   */\n  constructor(base) {\n    this.options = base.options;\n    this.els = this.createControl();\n  }\n\n  createControl() {\n    let container;\n    let containerClass;\n    let elements;\n\n    if (this.options.targetType === TARGET_TYPE.INPUT) {\n      containerClass = `${klasses.namespace} ${klasses.inputText.container}`;\n      container = createElement(\n        ['div', { id: VARS.containerId, classname: containerClass }],\n        Html.input\n      );\n      elements = {\n        container,\n        control: container.querySelector(`.${klasses.inputText.control}`),\n        input: container.querySelector(`.${klasses.inputText.input}`),\n        reset: container.querySelector(`.${klasses.inputText.reset}`),\n        result: container.querySelector(`.${klasses.inputText.result}`),\n      };\n    } else {\n      containerClass = `${klasses.namespace} ${klasses.glass.container}`;\n      container = createElement(\n        ['div', { id: VARS.containerId, classname: containerClass }],\n        Html.glass\n      );\n      elements = {\n        container,\n        control: container.querySelector(`.${klasses.glass.control}`),\n        button: container.querySelector(`.${klasses.glass.button}`),\n        input: container.querySelector(`.${klasses.glass.input}`),\n        reset: container.querySelector(`.${klasses.glass.reset}`),\n        result: container.querySelector(`.${klasses.glass.result}`),\n      };\n    }\n\n    // set placeholder from options\n    elements.input.placeholder = this.options.placeholder;\n\n    return elements;\n  }\n}\n\nHtml.glass = `\n  <div class=\"${klasses.glass.control} ${klasses.olControl}\">\n    <button type=\"button\" id=\"${VARS.buttonControlId}\" class=\"${klasses.glass.button}\"></button>\n    <input type=\"text\" id=\"${VARS.inputQueryId}\" class=\"${klasses.glass.input}\" autocomplete=\"off\" placeholder=\"Search ...\">\n    <a id=\"${VARS.inputResetId}\" class=\"${klasses.glass.reset} ${klasses.hidden}\"></a>\n  </div>\n  <ul class=\"${klasses.glass.result}\"></ul>\n`;\n\nHtml.input = `\n  <div class=\"${klasses.inputText.control}\">\n    <input type=\"text\" id=\"${VARS.inputQueryId}\" class=\"${klasses.inputText.input}\" autocomplete=\"off\" placeholder=\"Search ...\">\n    <span class=\"${klasses.inputText.icon}\"></span>\n    <button type=\"button\" id=\"${VARS.inputResetId}\" class=\"${klasses.inputText.reset} ${klasses.hidden}\"></button>\n  </div>\n  <ul class=\"${klasses.inputText.result}\"></ul>\n`;\n", "/**\n * @class Photon\n */\nexport class Photon {\n  /**\n   * @constructor\n   */\n  constructor() {\n    this.settings = {\n      url: 'https://photon.komoot.io/api/',\n\n      params: {\n        q: '',\n        limit: 10,\n        lang: 'en',\n      },\n\n      langs: ['de', 'it', 'fr', 'en'],\n    };\n  }\n\n  getParameters(options) {\n    options.lang = options.lang.toLowerCase();\n\n    return {\n      url: this.settings.url,\n\n      params: {\n        q: options.query,\n        limit: options.limit || this.settings.params.limit,\n\n        lang: this.settings.langs.includes(options.lang) ? options.lang : this.settings.params.lang,\n      },\n    };\n  }\n\n  handleResponse(results) {\n    if (results.features.length === 0) return [];\n\n    return results.features.map((result) => ({\n      lon: result.geometry.coordinates[0],\n      lat: result.geometry.coordinates[1],\n\n      address: {\n        name: result.properties.name,\n        postcode: result.properties.postcode,\n        city: result.properties.city,\n        state: result.properties.state,\n        country: result.properties.country,\n      },\n\n      original: {\n        formatted: result.properties.name,\n        details: result.properties,\n      },\n    }));\n  }\n}\n", "/**\n * @class OpenStreet\n */\nexport class OpenStreet {\n  /**\n   * @constructor\n   */\n  constructor() {\n    this.settings = {\n      url: 'https://nominatim.openstreetmap.org/search/',\n\n      params: {\n        q: '',\n        format: 'json',\n        addressdetails: 1,\n        limit: 10,\n        countrycodes: '',\n        'accept-language': 'en-US',\n      },\n    };\n  }\n\n  getParameters(opt) {\n    return {\n      url: this.settings.url,\n\n      params: {\n        q: opt.query,\n        format: this.settings.params.format,\n        addressdetails: this.settings.params.addressdetails,\n        limit: opt.limit || this.settings.params.limit,\n        countrycodes: opt.countrycodes || this.settings.params.countrycodes,\n        'accept-language': opt.lang || this.settings.params['accept-language'],\n      },\n    };\n  }\n\n  handleResponse(results) {\n    if (results.length === 0) return [];\n\n    return results.map((result) => ({\n      lon: result.lon,\n      lat: result.lat,\n      bbox: result.boundingbox,\n\n      address: {\n        name: result.display_name,\n        road: result.address.road || '',\n        houseNumber: result.address.house_number || '',\n        postcode: result.address.postcode,\n        city: result.address.city || result.address.town,\n        state: result.address.state,\n        country: result.address.country,\n      },\n\n      original: {\n        formatted: result.display_name,\n        details: result.address,\n      },\n    }));\n  }\n}\n", "/**\n * @class MapQuest\n */\nexport class MapQuest {\n  /**\n   * @constructor\n   */\n  constructor() {\n    this.settings = {\n      url: 'https://open.mapquestapi.com/nominatim/v1/search.php',\n\n      params: {\n        q: '',\n        key: '',\n        format: 'json',\n        addressdetails: 1,\n        limit: 10,\n        countrycodes: '',\n        'accept-language': 'en-US',\n      },\n    };\n  }\n\n  getParameters(options) {\n    return {\n      url: this.settings.url,\n\n      params: {\n        q: options.query,\n        key: options.key,\n        format: 'json',\n        addressdetails: 1,\n        limit: options.limit || this.settings.params.limit,\n        countrycodes: options.countrycodes || this.settings.params.countrycodes,\n\n        'accept-language': options.lang || this.settings.params['accept-language'],\n      },\n    };\n  }\n\n  handleResponse(results) {\n    if (results.length === 0) return [];\n\n    return results.map((result) => ({\n      lon: result.lon,\n      lat: result.lat,\n\n      address: {\n        name: result.address.neighbourhood || '',\n        road: result.address.road || '',\n        postcode: result.address.postcode,\n        city: result.address.city || result.address.town,\n        state: result.address.state,\n        country: result.address.country,\n      },\n\n      original: {\n        formatted: result.display_name,\n        details: result.address,\n      },\n    }));\n  }\n}\n", "/**\n * @class Bing\n */\nexport class Bing {\n  /**\n   * @constructor\n   */\n  constructor() {\n    this.settings = {\n      url: 'https://dev.virtualearth.net/REST/v1/Locations',\n      callbackName: 'jsonp',\n\n      params: {\n        query: '',\n        key: '',\n        includeNeighborhood: 0,\n        maxResults: 10,\n      },\n    };\n  }\n\n  getParameters(options) {\n    return {\n      url: this.settings.url,\n      callbackName: this.settings.callbackName,\n\n      params: {\n        query: options.query,\n        key: options.key,\n\n        includeNeighborhood:\n          options.includeNeighborhood || this.settings.params.includeNeighborhood,\n\n        maxResults: options.maxResults || this.settings.params.maxResults,\n      },\n    };\n  }\n\n  handleResponse(results) {\n    const { resources } = results.resourceSets[0];\n\n    if (resources.length === 0) return [];\n\n    return resources.map((result) => ({\n      lon: result.point.coordinates[1],\n      lat: result.point.coordinates[0],\n\n      address: {\n        name: result.name,\n      },\n\n      original: {\n        formatted: result.address.formattedAddress,\n        details: result.address,\n      },\n    }));\n  }\n}\n", "/**\n * @class OpenCage\n */\nexport class OpenCage {\n  /**\n   * @constructor\n   */\n  constructor() {\n    this.settings = {\n      url: 'https://api.opencagedata.com/geocode/v1/json?',\n\n      params: {\n        q: '',\n        key: '',\n        limit: 10,\n        countrycode: '',\n        pretty: 1,\n        no_annotations: 1,\n      },\n    };\n  }\n\n  getParameters(options) {\n    return {\n      url: this.settings.url,\n\n      params: {\n        q: options.query,\n        key: options.key,\n        limit: options.limit || this.settings.params.limit,\n        countrycode: options.countrycodes || this.settings.params.countrycodes,\n      },\n    };\n  }\n\n  handleResponse(results) {\n    if (results.results.length === 0) return [];\n\n    return results.results.map((result) => ({\n      lon: result.geometry.lng,\n      lat: result.geometry.lat,\n\n      address: {\n        name: result.components.house_number || '',\n        road: result.components.road || '',\n        postcode: result.components.postcode,\n        city: result.components.city || result.components.town,\n        state: result.components.state,\n        country: result.components.country,\n      },\n\n      original: {\n        formatted: result.formatted,\n        details: result.components,\n      },\n    }));\n  }\n}\n", "export function json(obj) {\n  return new Promise((resolve, reject) => {\n    const url = encodeUrlXhr(obj.url, obj.data);\n    const config = {\n      method: 'GET',\n      mode: 'cors',\n      credentials: 'same-origin',\n    };\n\n    if (obj.jsonp) {\n      jsonp(url, obj.callbackName, resolve);\n    } else {\n      fetch(url, config)\n        .then((r) => r.json())\n        .then(resolve)\n        .catch(reject);\n    }\n  });\n}\n\nfunction toQueryString(obj) {\n  return Object.keys(obj)\n    .reduce((acc, k) => {\n      acc.push(\n        typeof obj[k] === 'object'\n          ? toQueryString(obj[k])\n          : `${encodeURIComponent(k)}=${encodeURIComponent(obj[k])}`\n      );\n\n      return acc;\n    }, [])\n    .join('&');\n}\n\nfunction encodeUrlXhr(url, data) {\n  if (data && typeof data === 'object') {\n    url += (/\\?/u.test(url) ? '&' : '?') + toQueryString(data);\n  }\n\n  return url;\n}\n\nfunction jsonp(url, key, callback) {\n  // https://github.com/Fresheyeball/micro-jsonp/blob/master/src/jsonp.js\n  const { head } = document;\n  const script = document.createElement('script');\n  // generate minimally unique name for callback function\n  const callbackName = `f${Math.round(Math.random() * Date.now())}`;\n\n  // set request url\n  script.setAttribute(\n    'src',\n    // add callback parameter to the url\n    //    where key is the parameter key supplied\n    //    and callbackName is the parameter value\n    `${url + (url.indexOf('?') > 0 ? '&' : '?') + key}=${callbackName}`\n  );\n\n  // place jsonp callback on window,\n  //  the script sent by the server should call this\n  //  function as it was passed as a url parameter\n  window[callbackName] = (data) => {\n    window[callbackName] = undefined;\n\n    // clean up script tag created for request\n    setTimeout(() => head.removeChild(script), 0);\n\n    // hand data back to the user\n    callback(data);\n  };\n\n  // actually make the request\n  head.append(script);\n}\n", "import LayerVector from 'ol/layer/Vector';\nimport SourceVector from 'ol/source/Vector';\nimport Point from 'ol/geom/Point';\nimport Feature from 'ol/Feature';\nimport proj from 'ol/proj';\n\nimport { VARS, TARGET_TYPE, PROVIDERS, EVENT_TYPE } from '../konstants';\n\nimport {\n  hasClass,\n  addClass,\n  removeClass,\n  createElement,\n  template,\n  removeAllChildren,\n} from './helpers/dom';\nimport { Photon } from './providers/photon';\nimport { OpenStreet } from './providers/osm';\nimport { MapQuest } from './providers/mapquest';\nimport { Bing } from './providers/bing';\nimport { OpenCage } from './providers/opencage';\nimport { randomId, flyTo } from './helpers/mix';\nimport { json } from './helpers/ajax';\n\nconst klasses = VARS.cssClasses;\n\n/**\n * @class Nominatim\n */\nexport class Nominatim {\n  /**\n   * @constructor\n   * @param {Function} base Base class.\n   */\n  constructor(base, els) {\n    this.Base = base;\n\n    this.layerName = randomId('geocoder-layer-');\n    this.layer = new LayerVector({\n      name: this.layerName,\n      source: new SourceVector(),\n    });\n\n    this.options = base.options;\n    // provider is either the name of a built-in provider as a string or an\n    // object that implements the provider API\n    this.options.provider =\n      typeof this.options.provider === 'string'\n        ? this.options.provider.toLowerCase()\n        : this.options.provider;\n    this.provider = this.newProvider();\n\n    this.els = els;\n    this.lastQuery = '';\n    this.container = this.els.container;\n    this.registeredListeners = { mapClick: false };\n    this.setListeners();\n  }\n\n  setListeners() {\n    let timeout;\n    let lastQuery;\n\n    const openSearch = (evt) => {\n      evt.stopPropagation();\n\n      hasClass(this.els.control, klasses.glass.expanded) ? this.collapse() : this.expand();\n    };\n    const query = (evt) => {\n      const value = evt.target.value.trim();\n      const hit = evt.key\n        ? evt.key === 'Enter'\n        : evt.which\n        ? evt.which === 13\n        : evt.keyCode\n        ? evt.keyCode === 13\n        : false;\n\n      if (hit) {\n        evt.preventDefault();\n        this.query(value);\n      }\n    };\n    // eslint-disable-next-line unicorn/consistent-function-scoping\n    const stopBubbling = (evt) => evt.stopPropagation();\n    const reset = (evt) => {\n      this.els.input.focus();\n      this.els.input.value = '';\n      this.lastQuery = '';\n      addClass(this.els.reset, klasses.hidden);\n      this.clearResults();\n    };\n    const handleValue = (evt) => {\n      const value = evt.target.value.trim();\n\n      value.length !== 0\n        ? removeClass(this.els.reset, klasses.hidden)\n        : addClass(this.els.reset, klasses.hidden);\n\n      if (this.options.autoComplete && value !== lastQuery) {\n        lastQuery = value;\n        timeout && clearTimeout(timeout);\n        timeout = setTimeout(() => {\n          if (value.length >= this.options.autoCompleteMinLength) {\n            this.query(value);\n          }\n        }, this.options.autoCompleteTimeout);\n      }\n    };\n\n    this.els.input.addEventListener('keypress', query, false);\n    this.els.input.addEventListener('click', stopBubbling, false);\n    this.els.input.addEventListener('input', handleValue, false);\n    this.els.reset.addEventListener('click', reset, false);\n\n    if (this.options.targetType === TARGET_TYPE.GLASS) {\n      this.els.button.addEventListener('click', openSearch, false);\n    }\n  }\n\n  query(q) {\n    // lazy provider\n    if (!this.provider) {\n      this.provider = this.newProvider();\n    }\n\n    const parameters = this.provider.getParameters({\n      query: q,\n      key: this.options.key,\n      lang: this.options.lang,\n      countrycodes: this.options.countrycodes,\n      limit: this.options.limit,\n    });\n\n    if (this.lastQuery === q && this.els.result.firstChild) return;\n\n    this.lastQuery = q;\n    this.clearResults();\n    addClass(this.els.reset, klasses.spin);\n\n    const ajax = {\n      url: parameters.url,\n      data: parameters.params,\n    };\n\n    if (parameters.callbackName) {\n      ajax.jsonp = true;\n      ajax.callbackName = parameters.callbackName;\n    }\n\n    json(ajax)\n      .then((res) => {\n        // eslint-disable-next-line no-console\n        this.options.debug && console.info(res);\n\n        removeClass(this.els.reset, klasses.spin);\n\n        // will be fullfiled according to provider\n        const res_ = this.provider.handleResponse(res);\n\n        if (res_) {\n          this.createList(res_);\n          this.listenMapClick();\n        }\n      })\n      .catch((err) => {\n        removeClass(this.els.reset, klasses.spin);\n\n        const li = createElement('li', '<h5>Error! No internet connection?</h5>');\n\n        this.els.result.append(li);\n      });\n  }\n\n  createList(response) {\n    const ul = this.els.result;\n\n    response.forEach((row) => {\n      let addressHtml;\n\n      switch (this.options.provider) {\n        case PROVIDERS.OSM:\n          addressHtml = `<span class=\"${klasses.road}\">${row.address.name}</span>`;\n\n          break;\n\n        default:\n          addressHtml = this.addressTemplate(row.address);\n      }\n\n      const html = `<a href=\"#\">${addressHtml}</a>`;\n      const li = createElement('li', html);\n\n      li.addEventListener(\n        'click',\n        (evt) => {\n          evt.preventDefault();\n          this.chosen(row, addressHtml, row.address, row.original);\n        },\n        false\n      );\n\n      ul.append(li);\n    });\n  }\n\n  chosen(place, addressHtml, addressObj, addressOriginal) {\n    const map = this.Base.getMap();\n    const coord_ = [Number.parseFloat(place.lon), Number.parseFloat(place.lat)];\n    const projection = map.getView().getProjection();\n    const coord = proj.transform(coord_, 'EPSG:4326', projection);\n\n    let { bbox } = place;\n\n    if (bbox) {\n      bbox = proj.transformExtent(\n        [bbox[2], bbox[1], bbox[3], bbox[0]], // NSWE -> WSEN\n        'EPSG:4326',\n        projection\n      );\n    }\n\n    const address = {\n      formatted: addressHtml,\n      details: addressObj,\n      original: addressOriginal,\n    };\n\n    this.options.keepOpen === false && this.clearResults(true);\n\n    if (this.options.preventDefault === true) {\n      this.Base.dispatchEvent({\n        type: EVENT_TYPE.ADDRESSCHOSEN,\n        address,\n        coordinate: coord,\n        bbox,\n        place,\n      });\n    } else {\n      if (bbox) {\n        map.getView().fit(bbox, { duration: 500 });\n      } else {\n        flyTo(map, coord);\n      }\n\n      const feature = this.createFeature(coord, address);\n\n      this.Base.dispatchEvent({\n        type: EVENT_TYPE.ADDRESSCHOSEN,\n        address,\n        feature,\n        coordinate: coord,\n        bbox,\n        place,\n      });\n    }\n  }\n\n  createFeature(coord) {\n    const feature = new Feature(new Point(coord));\n\n    this.addLayer();\n    feature.setStyle(this.options.featureStyle);\n    feature.setId(randomId('geocoder-ft-'));\n    this.getSource().addFeature(feature);\n\n    return feature;\n  }\n\n  addressTemplate(address) {\n    const html = [];\n\n    if (address.name) {\n      html.push(['<span class=\"', klasses.road, '\">{name}</span>'].join(''));\n    }\n\n    if (address.road || address.building || address.house_number) {\n      html.push(\n        ['<span class=\"', klasses.road, '\">{building} {road} {house_number}</span>'].join('')\n      );\n    }\n\n    if (address.city || address.town || address.village) {\n      html.push(\n        ['<span class=\"', klasses.city, '\">{postcode} {city} {town} {village}</span>'].join('')\n      );\n    }\n\n    if (address.state || address.country) {\n      html.push(['<span class=\"', klasses.country, '\">{state} {country}</span>'].join(''));\n    }\n\n    return template(html.join('<br>'), address);\n  }\n\n  newProvider() {\n    switch (this.options.provider) {\n      case PROVIDERS.OSM:\n        return new OpenStreet();\n      case PROVIDERS.MAPQUEST:\n        return new MapQuest();\n      case PROVIDERS.PHOTON:\n        return new Photon();\n      case PROVIDERS.BING:\n        return new Bing();\n      case PROVIDERS.OPENCAGE:\n        return new OpenCage();\n\n      default:\n        return this.options.provider;\n    }\n  }\n\n  expand() {\n    removeClass(this.els.input, klasses.spin);\n    addClass(this.els.control, klasses.glass.expanded);\n    window.setTimeout(() => this.els.input.focus(), 100);\n    this.listenMapClick();\n  }\n\n  collapse() {\n    this.els.input.value = '';\n    this.els.input.blur();\n    addClass(this.els.reset, klasses.hidden);\n    removeClass(this.els.control, klasses.glass.expanded);\n    this.clearResults();\n  }\n\n  listenMapClick() {\n    // already registered\n    if (this.registeredListeners.mapClick) return;\n\n    const that = this;\n    const mapElement = this.Base.getMap().getTargetElement();\n\n    this.registeredListeners.mapClick = true;\n\n    // one-time fire click\n    mapElement.addEventListener(\n      'click',\n      {\n        handleEvent(evt) {\n          that.clearResults(true);\n          mapElement.removeEventListener(evt.type, this, false);\n          that.registeredListeners.mapClick = false;\n        },\n      },\n      false\n    );\n  }\n\n  clearResults(collapse) {\n    collapse && this.options.targetType === TARGET_TYPE.GLASS\n      ? this.collapse()\n      : removeAllChildren(this.els.result);\n  }\n\n  getSource() {\n    return this.layer.getSource();\n  }\n\n  addLayer() {\n    let found = false;\n\n    const map = this.Base.getMap();\n\n    map.getLayers().forEach((layer) => {\n      if (layer === this.layer) found = true;\n    });\n\n    if (!found) map.addLayer(this.layer);\n  }\n}\n", "import Control from 'ol/control/Control';\nimport Style from 'ol/style/Style';\nimport Icon from 'ol/style/Icon';\n\nimport { CONTROL_TYPE, DEFAULT_OPTIONS, FEATURE_SRC } from '../konstants';\n\nimport { Html } from './html';\nimport { Nominatim } from './nominatim';\nimport { assert, mergeOptions } from './helpers/mix';\n\n/**\n * @class Base\n * @extends {ol.control.Control}\n */\nexport default class Base extends Control {\n  /**\n   * @constructor\n   * @param {string} type nominatim|reverse.\n   * @param {object} options Options.\n   */\n  constructor(type = CONTROL_TYPE.NOMINATIM, options = {}) {\n    if (!(this instanceof Base)) return new Base();\n\n    assert(typeof type === 'string', '@param `type` should be string!');\n    assert(\n      type === CONTROL_TYPE.NOMINATIM || type === CONTROL_TYPE.REVERSE,\n      `@param 'type' should be '${CONTROL_TYPE.NOMINATIM}'\n      or '${CONTROL_TYPE.REVERSE}'!`\n    );\n    assert(typeof options === 'object', '@param `options` should be object!');\n\n    DEFAULT_OPTIONS.featureStyle = [\n      new Style({ image: new Icon({ scale: 0.7, src: FEATURE_SRC }) }),\n    ];\n\n    this.options = mergeOptions(DEFAULT_OPTIONS, options);\n    this.container = undefined;\n\n    let $nominatim;\n\n    const $html = new Html(this);\n\n    if (type === CONTROL_TYPE.NOMINATIM) {\n      this.container = $html.els.container;\n      $nominatim = new Nominatim(this, $html.els);\n      this.layer = $nominatim.layer;\n    }\n\n    super({ element: this.container });\n  }\n\n  /**\n   * @return {ol.layer.Vector} Returns the layer created by this control\n   */\n  getLayer() {\n    return this.layer;\n  }\n\n  /**\n   * @return {ol.source.Vector} Returns the source created by this control\n   */\n  getSource() {\n    return this.getLayer().getSource();\n  }\n\n  /**\n   * Set a new provider\n   * @param {String} provider\n   */\n  setProvider(provider) {\n    this.options.provider = provider;\n  }\n\n  /**\n   * Set provider key\n   * @param {String} key\n   */\n  setProviderKey(key) {\n    this.options.key = key;\n  }\n}\n", "export default require(\"./node_modules/ol-geocoder/dist/ol-geocoder.js\");"],
  "mappings": "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",
  "names": []
}
