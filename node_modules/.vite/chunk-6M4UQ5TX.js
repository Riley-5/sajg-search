import {
  ImageState_default,
  init_ImageState
} from "./chunk-Z2ZB4XGC.js";
import {
  IMAGE_DECODE,
  init_has
} from "./chunk-UJLNMLNK.js";
import {
  Target_default,
  getHeight,
  init_Target,
  init_events,
  init_extent,
  listenOnce,
  unlistenByKey
} from "./chunk-J5U7SJYM.js";
import {
  EventType_default,
  __esm,
  abstract,
  init_EventType,
  init_util
} from "./chunk-P3NQKPC7.js";

// node_modules/ol/ImageBase.js
var __extends, ImageBase, ImageBase_default;
var init_ImageBase = __esm({
  "node_modules/ol/ImageBase.js"() {
    init_Target();
    init_EventType();
    init_util();
    __extends = function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
          d2.__proto__ = b2;
        } || function(d2, b2) {
          for (var p in b2)
            if (Object.prototype.hasOwnProperty.call(b2, p))
              d2[p] = b2[p];
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    ImageBase = function(_super) {
      __extends(ImageBase2, _super);
      function ImageBase2(extent, resolution, pixelRatio, state) {
        var _this = _super.call(this) || this;
        _this.extent = extent;
        _this.pixelRatio_ = pixelRatio;
        _this.resolution = resolution;
        _this.state = state;
        return _this;
      }
      ImageBase2.prototype.changed = function() {
        this.dispatchEvent(EventType_default.CHANGE);
      };
      ImageBase2.prototype.getExtent = function() {
        return this.extent;
      };
      ImageBase2.prototype.getImage = function() {
        return abstract();
      };
      ImageBase2.prototype.getPixelRatio = function() {
        return this.pixelRatio_;
      };
      ImageBase2.prototype.getResolution = function() {
        return this.resolution;
      };
      ImageBase2.prototype.getState = function() {
        return this.state;
      };
      ImageBase2.prototype.load = function() {
        abstract();
      };
      return ImageBase2;
    }(Target_default);
    ImageBase_default = ImageBase;
  }
});

// node_modules/ol/Image.js
function listenImage(image, loadHandler, errorHandler) {
  var img = image;
  if (img.src && IMAGE_DECODE) {
    var promise = img.decode();
    var listening_1 = true;
    var unlisten = function() {
      listening_1 = false;
    };
    promise.then(function() {
      if (listening_1) {
        loadHandler();
      }
    }).catch(function(error) {
      if (listening_1) {
        if (error.name === "EncodingError" && error.message === "Invalid image type.") {
          loadHandler();
        } else {
          errorHandler();
        }
      }
    });
    return unlisten;
  }
  var listenerKeys = [
    listenOnce(img, EventType_default.LOAD, loadHandler),
    listenOnce(img, EventType_default.ERROR, errorHandler)
  ];
  return function unlisten2() {
    listenerKeys.forEach(unlistenByKey);
  };
}
var __extends2, ImageWrapper, Image_default;
var init_Image = __esm({
  "node_modules/ol/Image.js"() {
    init_EventType();
    init_ImageBase();
    init_ImageState();
    init_has();
    init_extent();
    init_events();
    __extends2 = function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
          d2.__proto__ = b2;
        } || function(d2, b2) {
          for (var p in b2)
            if (Object.prototype.hasOwnProperty.call(b2, p))
              d2[p] = b2[p];
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    ImageWrapper = function(_super) {
      __extends2(ImageWrapper2, _super);
      function ImageWrapper2(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {
        var _this = _super.call(this, extent, resolution, pixelRatio, ImageState_default.IDLE) || this;
        _this.src_ = src;
        _this.image_ = new Image();
        if (crossOrigin !== null) {
          _this.image_.crossOrigin = crossOrigin;
        }
        _this.unlisten_ = null;
        _this.state = ImageState_default.IDLE;
        _this.imageLoadFunction_ = imageLoadFunction;
        return _this;
      }
      ImageWrapper2.prototype.getImage = function() {
        return this.image_;
      };
      ImageWrapper2.prototype.handleImageError_ = function() {
        this.state = ImageState_default.ERROR;
        this.unlistenImage_();
        this.changed();
      };
      ImageWrapper2.prototype.handleImageLoad_ = function() {
        if (this.resolution === void 0) {
          this.resolution = getHeight(this.extent) / this.image_.height;
        }
        this.state = ImageState_default.LOADED;
        this.unlistenImage_();
        this.changed();
      };
      ImageWrapper2.prototype.load = function() {
        if (this.state == ImageState_default.IDLE || this.state == ImageState_default.ERROR) {
          this.state = ImageState_default.LOADING;
          this.changed();
          this.imageLoadFunction_(this, this.src_);
          this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));
        }
      };
      ImageWrapper2.prototype.setImage = function(image) {
        this.image_ = image;
        this.resolution = getHeight(this.extent) / this.image_.height;
      };
      ImageWrapper2.prototype.unlistenImage_ = function() {
        if (this.unlisten_) {
          this.unlisten_();
          this.unlisten_ = null;
        }
      };
      return ImageWrapper2;
    }(ImageBase_default);
    Image_default = ImageWrapper;
  }
});

// node_modules/ol/size.js
function hasArea(size) {
  return size[0] > 0 && size[1] > 0;
}
function scale(size, ratio, opt_size) {
  if (opt_size === void 0) {
    opt_size = [0, 0];
  }
  opt_size[0] = size[0] * ratio + 0.5 | 0;
  opt_size[1] = size[1] * ratio + 0.5 | 0;
  return opt_size;
}
function toSize(size, opt_size) {
  if (Array.isArray(size)) {
    return size;
  } else {
    if (opt_size === void 0) {
      opt_size = [size, size];
    } else {
      opt_size[0] = size;
      opt_size[1] = size;
    }
    return opt_size;
  }
}
var init_size = __esm({
  "node_modules/ol/size.js"() {
  }
});

export {
  hasArea,
  scale,
  toSize,
  init_size,
  ImageBase_default,
  init_ImageBase,
  listenImage,
  Image_default,
  init_Image
};
//# sourceMappingURL=chunk-6M4UQ5TX.js.map
